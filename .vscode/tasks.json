{
  "version": "2.0.0",
  "tasks": [
    {
      "type": "cmake",
      "label": "CMake: configure",
      "command": "configure", // cmake 配置任务，包括 依赖安装、查找、链接
      "preset": "${command:cmake.activeConfigurePresetName}", // 运行预设，依赖 CmakePresets.json，运行前要先选择 targets
      "detail": "CMake template configure task"
    },
    {
      "type": "cmake",
      "label": "Cmake: build",
      "command": "build", // cmake 编译生成任务，于 cmake tools 插件配合使用
      "targets": [
        "books"
      ],
      "dependsOn": [
        "CMake: configure"
      ],
      "preset": "${command:cmake.activeBuildPresetName}", // 运行预设，依赖 CmakePresets.json，运行前要先选择 targets
      "group": "build",
      "problemMatcher": [],
      "detail": "CMake 生成 任务"
    },
    {
      "type": "shell",
      "label": "make build",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "command": "cmake -DCMAKE_BUILD_TYPE=debug ../;make", // 自定义命令，运行前删除 build
      "options": {
        "cwd": "${workspaceFolder}/build"
      },
      "presentation": {
        "panel": "shared"
      },
      "linux": {
        "type": "shell"
      },
      "detail": "Make 生成 任务"
    },
    {
      "type": "cppbuild",
      "label": "C/C++: clang 生成活动文件",
      "command": "/usr/bin/clang++",
      "args": [
        "-fcolor-diagnostics",
        "-fansi-escape-codes",
        "-std=c++11",
        "-g",
        "${file}", // 配置源文件
        "-o",
        "${fileDirname}/${fileBasenameNoExtension}.out"
      ],
      "options": {
        "cwd": "${fileDirname}"
      },
      "problemMatcher": [
        "$gcc"
      ],
      "group": "build",
      "detail": "调试器生成的任务。",
      "linux": {
        "type": "shell"
      }
    },
    {
      "type": "cppbuild",
      "label": "C/C++: Dirname clang 生成活动文件",
      "command": "/usr/bin/clang++",
      "args": [
        "-fcolor-diagnostics", // 输出信息彩色
        "-fansi-escape-codes", // 控制是否使用ANSI转义码而不是Windows Console API来输出彩色诊断。此选项仅在Windows上使用，默认为关闭。
        "-std=c++11", // 指定c++版本
        "-g", // 编译时产生调试信息
        "*.cpp", // 配置源文件
        "-o", //-0参数指定生成可执行文件的名字，下一行就是生成可执行文件的位置在当前的工作目录，名字叫a.out
        "${fileDirname}/${fileBasenameNoExtension}.out" // 输出可执行文件
      ],
      "options": {
        "cwd": "${fileDirname}"
      },
      "problemMatcher": [
        "$gcc"
      ],
      "group": "build",
      "detail": "调试器生成的任务。",
      "linux": {
        "type": "shell"
      }
    }
  ]
}